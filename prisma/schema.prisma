generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Employee {
  id            Int                @id @default(autoincrement())
  username      String?            @unique
  password      String?
  employee_id   String?            @default(uuid())
  role_id       Int?
  branch_id     Int?
  first_name    String?
  last_name     String?
  nick_name     String?
  date_of_birth DateTime?
  age           Int?
  sex           String?
  phone_no      String?
  identity_id   String?
  email         String?
  salary_base   Float?
  latest_login  DateTime?
  token         String?
  is_active     Boolean?           @default(true)
  branch        BranchMasterData?  @relation(fields: [branch_id], references: [id])
  role          RoleMasterData?    @relation(fields: [role_id], references: [id])
  orders        OrderTransaction[]

  @@map("Employee")
}

model RoleMasterData {
  id        Int        @id @default(autoincrement())
  name      String?    @unique
  list      Json?
  employees Employee[]

  @@map("RoleMasterData")
}

model MenuMasterData {
  id            Int       @id @default(autoincrement())
  name          String?   @unique
  created_date  DateTime?
  latest_update DateTime?

  @@map("MenuMasterData")
}

model BranchMasterData {
  id           Int                 @id @default(autoincrement())
  name         String?             @unique
  province     String?
  district     String?
  sub_district String?
  postal_code  String?
  employees    Employee[]
  products     ProductMasterData[]

  @@map("BranchMasterData")
}

model ProductMasterData {
  id          Int                 @id @default(autoincrement())
  name        String?             @unique
  detail      String?
  sale        Float?
  cost_price  Float?
  quantity    Int?
  category_id Int?
  type_id     Int?
  branch_id   Int?
  orders      OrderTransaction[]
  branch      BranchMasterData?   @relation(fields: [branch_id], references: [id])
  category    CategoryMasterData? @relation(fields: [category_id], references: [id])
  type        TypeMasterData?     @relation(fields: [type_id], references: [id])

  @@map("ProductMasterData")
}

model CategoryMasterData {
  id       Int                 @id @default(autoincrement())
  name     String?             @unique
  products ProductMasterData[]

  @@map("CategoryMasterData")
}

model TypeMasterData {
  id       Int                 @id @default(autoincrement())
  name     String?             @unique
  products ProductMasterData[]

  @@map("TypeMasterData")
}

model DiscountMasterData {
  id         Int       @id @default(autoincrement())
  name       String?   @unique
  price      Int?
  percent    Int?
  total      Int?
  start_date DateTime?
  end_date   DateTime?
  is_active  Boolean?  @default(true)

  @@map("DiscountMasterData")
}

model OrderTransaction {
  id               Int                @id @default(autoincrement())
  product_id       Int?
  employee_id      Int?
  datetime         DateTime?
  discount         Int?
  total_price_sold Int?
  description      String?
  type             String?
  employee         Employee?          @relation(fields: [employee_id], references: [id])
  product          ProductMasterData? @relation(fields: [product_id], references: [id])

  @@map("OrderTransaction")
}
